@gray-darker:  lighten(#000, 13.5%);
@gray-dark:    lighten(#000, 20%);
@gray:         lighten(#000, 33.5%);
@gray-light:   lighten(#000, 75%);
@gray-lighter: lighten(#000, 93.5%);
@gray-white:   lighten(#000, 98.5%);

@states: pending, running, success, fail;
@statesColors: #C7C7C7, #4F88BB, #62983D, #C00000;
@statesBackgroundColor: #EEF2F8,  #EDF1F8, #EDF3EC, #FCE7E7;

@headers: name, owner, time-started, state, metrics, build, unit-tests, functional-tests;
@headerWidths: 16%, 13%, 15%, 9%, 9%, 9%, 9%, 13%;

@import "triangles.less";

body {
   font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
   font-size: 12px;
   background-color: @gray-white;
   color: @gray-dark;
}

.ng-hide {
   display:none!important;
}

.generate-text-states(1);
.generate-text-states (@idx) when (@idx <= length(@states)) {
   @name: extract(@states, @idx);
   .text--@{name} {
      color: extract(@statesColors, @idx);
   }
   .generate-text-states(@idx + 1);
}

.text--large {
   font-size: 16px;
}

.text--small {
   font-size: 9px;
}


.clearfix() {
   &:before,
   &:after {
      content: " ";
      display: table;
   }
   &:after {
      clear: both;
   }
}

.container {
   width: 1000px;
   margin: 3em auto;
   padding: 10px;

   background-color: @gray-lighter;
   border-color: @gray-light;
   box-shadow: 0 0 5px @gray-light;
}

.list {
   &__header {
      padding: 5px;
      margin-bottom: 5px;
      &__col--sortable {
         cursor: pointer;
      }
   }

   &__header__col,
   &__item__col {
      display: inline-block;
      vertical-align: middle
   }

   .generate-cols-width(1);
   .generate-cols-width (@idx) when (@idx <= length(@headers)) {
      @name: extract(@headers, @idx);
      @width: extract(@headerWidths, @idx);
      &__@{name}-col {
         width: @width;
      }
      .generate-cols-width(@idx + 1);
   }

   &__item {
      border: 1px solid #000;
      padding: 5px;
      margin-bottom: 10px;

      .generate-items-states(1);
      .generate-items-states (@idx) when (@idx <= length(@states)) {
         @name: extract(@states, @idx);
         &--@{name} {
            color: extract(@statesColors, @idx);
            border-color: extract(@statesColors, @idx);
            background-color: extract(@statesBackgroundColor, @idx);
         }
         .generate-items-states(@idx + 1);
      }

      &--selected {
         color: inherit;
      }

      &__summary {
         cursor: pointer;
      }

      .build-icon, .firewall-icon {
         vertical-align: middle;
         margin-right: 5px;
      }
   }
}

.icon (@content) {
   display: inline-block;
   height: 18px;
   width: 18px;
   border: 1px solid @gray-light;

   text-align: center;
   &:before {
      content: @content;
      line-height: 18px;
   }

   &--large {
      height: 36px;
      width: 36px;
      &:before {
         line-height: 36px;
      }
   }
}

.generate-icons-states(1);
.generate-icons-states (@idx) when (@idx <= length(@states)) {
   @name: extract(@states, @idx);
   .icon--@{name} {
      color: extract(@statesColors, @idx);
      border-color: extract(@statesColors, @idx);
   }
   .generate-icons-states(@idx + 1);
}

.build-icon {
   .icon('B');
}

.firewall-icon {
   .icon('F');
}

.progress {
   background-color: @gray-lighter;
   border: 1px solid @gray-light;
   box-shadow: 1px 1px 2px @gray-light;
   width: 50px;

   &__indicator {
      height: 18px;

      .generate-indicators-states(1);
      .generate-indicators-states (@idx) when (@idx <= length(@states)) {
         @name: extract(@states, @idx);
         &--@{name} {
            background-color: extract(@statesColors, @idx);
         }
         .generate-indicators-states(@idx + 1);
      }
   }
}

.color-progress {
   position: relative;
   background-color: #F7CBAC;
   margin-top: 20px;

   &__indicator {
      background-color: #C5E0B3;
      height: 23px;
   }

   &__text {
      position: absolute;
      text-align: center;
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
   }
}

.badge {
   height: 125px;
   width: 125px;
   border: 2px solid #000;
   margin: 10px;
   padding: 5px;
   box-shadow: 2px 2px 3px @gray-light;

   .generate-badges-states(1);
   .generate-badges-states (@idx) when (@idx <= length(@states)) {
      @name: extract(@states, @idx);
      &--@{name} {
         border-color: extract(@statesColors, @idx);

         .badge__title {
            color: extract(@statesColors, @idx);
         }
      }
      .generate-badges-states(@idx + 1);
   }

   &__title {

   }

   .pie-chart {
      width: 60px;
      height: 60px;
   }
}

.badges-list {
   .badge {
      float: left;
   }

   .clearfix();

   margin-top: 10px;
}

.asc-sort-icon {
   display: inline-block;
   .shape-triangle-up(8px, @gray-dark);
}

.desc-sort-icon {
   display: inline-block;
   .shape-triangle-down(8px, @gray-dark);
}

.arrow-up-badge {
   @color: #538135;
   position: relative;
   width: 20px;
   height: 50px;
   display: inline-block;

   &__triangle {
      position: absolute;
      top: 0;
      .shape-triangle-up(30px, @color);
   }

   &__rectangle {
      position: absolute;
      bottom: 0;
      left: 7px;
      background-color: @color;
      height: 20px;
      width: 15px;
   }

   &__text {
      position: absolute;
      width: 30px;
      top: 20px;
      text-align: center;
      color: #FFF;
   }
}

.arrow-right-badge {
   @color: #FFD965;
   position: relative;
   width: 50px;
   height: 20px;
   display: inline-block;
   margin-bottom: 5px;

   &__triangle {
      position: absolute;
      right: 0;
      .shape-triangle-right(30px, @color);
   }

   &__rectangle {
      position: absolute;
      left: 0;
      top: 7px;
      background-color: @color;
      height: 15px;
      width: 20px;
   }

   &__text {
      position: absolute;
      width: 50px;
      top: 7px;
      text-align: center;
      color: #000;
   }
}

.row {
   display: table;
   width: 100%;
   .cell {
      vertical-align: middle;
      text-align: center;
      display: table-cell;
   }
}
